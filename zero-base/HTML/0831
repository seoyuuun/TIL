Today,
  [1] 어제 진도 못 나간 메타데이터부터
  [2] 구조 요소
  [3] 목록과 표
  
 --start--
 
[1] metadata 메타데이터 요소
1. 메타데이터의 역할
 - 데이터를 설명하는 데이터, 메타데이터
 - html도 문서 자체가 data

-- metadata 속성--
2. 문서 제목 title
 - 웹페이지를 설명한 제목을 title 태그 사이에 내용에 넣는다
 - 문자열만 작성 가능
 - 웹페이지를 즐겨찾기할 때 기본 이름으로 출력된다
 - 페이지의 정보를 수집할 때 title 안에 내용이 검색 엔진의 결과에 영향을 크게 미친다

3. 문서레벨 메타데이터 meta
 - meta 태그를 여러개 작성을 해서 데이터, html 문서 정보 등을 나타낼 수 있다
 - 속성 name, content를 이용해 이름과 값을 쌍으로 작성할 수 있다
 - 표준 메타데이터 이름을 참고하여 목적에 맞게 작성하고 꼼꼼하게 검토하는 것은 권장한다

4. meta 문자인코딩, 뷰포트
 - charset : 문자 인코딩 환경을 설정하는 속성
 *UTF-8 : 과거에는 영어와 특수문자만을 컴퓨터에 작성을 했지만, 발전에 따라 여러 나라로 컴퓨터가 보급됨에 따라 여러 국가가 범용적으로 호환이 가능한 문자 인코딩 설정값
 - viewport
	- name 속성 중 하나
	- 전체 웹페이지에서 페이지를 볼 수 있는 영역 범위 지칭

5. 외부 리소스 연결 link
 - 필요한만큼 여러 개의 link 태그를 사용하면 된다
 - 스타일 시트를 연결할 때도 많이 사용하지만, 파비콘(확장자 .ico)이나 홈 아이콘을 불러와 적용할 때도 사용한다
 - 빈 요소
 - <link href="style/main.css" rel="stylesheet">
	- rel은 연결되는 링크가 문서와 어떤 관계가 있는지를 설명한다
 - 링크된 콘텐츠의  타입을 정의하는데 사용하는 속성은 type

6. MIME 타입
 - 리소르를 내려받아야 할 때 해당 문서가 어떤 타입인지 명시해줄 때 MIME 타입을 사용한다
 - MIME 타입 구조 : 대분류/서브타입

7. 스타일 정보 style
 - head 안에 위치, 그러나 외부 문서에 작성한 후 문서를 링크를 통해 불러오는 것을 권장한다
 - 같은 요소인 경우 아래의 코드가 위의 코드에 덮어쓰여진다

8. 스크립트 script
 - 보통 JS를 연결할 때 많이 사용한다
 - <style>과 동일하게 head 안에 script를 이용해 js 코드를 입력할 수 있으나 외부 문서로 따로 작성 권장
 - <script> 태그를 만나는 순간 해석을 우선한다. 때문에 script 태그는 body 하단에 작성하는 것을 추천한다.
